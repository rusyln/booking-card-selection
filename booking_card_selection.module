<?php
use Drupal\Core\Form\FormStateInterface;
/**
 * Implements hook_theme().
 */
function booking_card_selection_theme($existing, $type, $theme, $path) {
  $extension_path_resolver = \Drupal::service('extension.path.resolver');
  $module_path = $extension_path_resolver->getPath('module', 'booking_card_selection');

  return [
    'input__radio_card' => [
      'template' => 'input--radio-card',
      'path' => $module_path . '/templates',
      '#attached' => [
        'library' => [
          'booking_card_selection/booking_card_selection',
        ],
      ],

    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK() for input__radio_card theme hook.
 */
function booking_card_selection_preprocess_input__radio_card(&$variables) {
  $element = $variables['element'];

  // Prepare variables for the template.
  $variables['attributes'] = $element['#attributes'];
  $variables['title'] = $element['#title'];
  $variables['value'] = $element['#value'];
  $variables['name'] = $element['#name'];
  $variables['id'] = $element['#id'];
}
/**
 * Implements hook_form_alter().
 */
function booking_card_selection_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  // Adding custom validation for the welcome page type field.
  if ($form_id == 'node-booking-form') {
   // Add the custom CSS library.
   $form['#attached']['library'][] = 'booking_card_selection/booking_card_selection';
      
   // Alter the radio buttons to use the custom theme hook.
   foreach ($form as $key => &$element) {
     if (is_array($element) && isset($element['#type']) && $element['#type'] === 'radios') {
       $element['#theme'] = 'input__radio_card';
     }
   }
  }
}
